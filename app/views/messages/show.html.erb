<div class="mediation-container">
  <%       
    tenant_screening = ScreeningQuestion.find_by(ScreeningID: @mediation.TenantScreeningID, deleted_at: nil)
    landlord_screening = ScreeningQuestion.find_by(ScreeningID: @mediation.LandlordScreeningID, deleted_at: nil)
  %>
  <% if @mediation&.deleted_at.nil? && @message_string&.deleted_at.nil? %>
    <% if @mediation&.MediatorRequested && @mediation&.MediatorAssigned && (tenant_screening&.flagged != true && landlord_screening&.flagged != true) %>
      <h1>Mediation Conversation</h1>
      <p>
        A mediator has been requested and assigned to this case. <br>
        You are now communicating with a neutral third-party mediator to help resolve the issue.
      </p>
    <% elsif @mediation&.MediatorRequested && @mediation&.MediatorAssigned && (tenant_screening&.flagged == true || landlord_screening&.flagged == true) %>
      <h1>Mediation Conversation</h1>
    <% else %>
      <h1>
        Negotiation Conversation with <%= @user.Role == "Tenant" ? "Landlord" : "Tenant" %>
      </h1>
      <p>
        Welcome, <%= @user.FName %>! Here is the negotiation conversation.
      </p>
    <% end %>
    <div class="conversation-info-trigger">
      <button type="button" class="info-toggle-btn" data-conversation-info-toggle>
        <i class="fa-solid fa-circle-info" aria-hidden="true"></i>
        Conversation details
      </button>
    </div>

    <div class="conversation-info-panel" data-conversation-info-panel hidden role="dialog" aria-modal="true">
      <div class="conversation-info-card">
        <div class="conversation-info-card__header">
          <h3>Conversation details</h3>
          <button type="button" class="info-close-btn" data-conversation-info-close aria-label="Close conversation details">
            <i class="fa-solid fa-xmark" aria-hidden="true"></i>
          </button>
        </div>
        <div class="conversation-info-card__body">
          <table class="info-table">
            <tr>
              <th>Address</th>
              <td><%= @mediation.tenant.TenantAddress.presence || "N/A" %></td>
            </tr>
            <% if @user.Role == "Tenant" %>
              <tr>
                <th>Landlord Name</th>
                <td><%= @mediation.landlord.FName %> <%= @mediation.landlord.LName %></td>
              </tr>
              <tr>
                <th>Landlord Email</th>
                <td><%= @mediation.landlord.Email %></td>
              </tr>
            <% elsif @user.Role == "Landlord" %>
              <tr>
                <th>Tenant Name</th>
                <td><%= @mediation.tenant.FName %> <%= @mediation.tenant.LName %></td>
              </tr>
              <tr>
                <th>Tenant Email</th>
                <td><%= @mediation.tenant.Email %></td>
              </tr>
            <% end %>
          </table>
        </div>
      </div>
    </div>
    <% mediator_screening_needed = @mediation&.MediatorRequested && @mediation&.MediatorAssigned &&
      ((@user.Role == "Tenant" && @mediation.TenantScreeningID.nil?) ||
      (@user.Role == "Landlord" && @mediation.LandlordScreeningID.nil?)) %>

    <%
      mediator_chat_ready = @mediation&.MediatorRequested && @mediation&.MediatorAssigned &&
        (
          (tenant_screening&.flagged != true) && (landlord_screening&.flagged != true)
        )
    %>

    <% if mediator_chat_ready %>
      <!-- Mediator Chatbox -->
      <div class="message-page-container chat-layout">
        <section class="chat-panel-wrapper">
          <%= render partial: "mediator_chatbox", locals: {
            recipient: @mediator,
            messages: @messages,
            message_string: @message_string,
            current_user: @user,
            participants: @conversation_participants
          } %>
        </section>
        <aside class="chat-actions-column">
          <%= render 'actions' %>
        </aside>
      </div>
    <% elsif (tenant_screening&.flagged == true || landlord_screening&.flagged == true) %>
      <p class="alert alert-warning">One of the party's screening questions has been flagged and is under review by an administrator. Please wait before continuing mediation.</p>
    <% elsif mediator_screening_needed %>
      
        <%= render 'actions' %>
      
    <% else %>
      <!-- Normal Chatbox and Actions Side-by-side Layout -->
      <div class="message-page-container chat-layout">
        <section class="chat-panel-wrapper">
          <%= render 'negotiation_chatbox', participants: @conversation_participants, current_user: @user %>
        </section>
        <aside class="chat-actions-column">
          <%= render 'actions' %>
        </aside>
      </div>
    <% end %>
  <% else %>
    <%= render "good_faith_prompt", mediation: @mediation, user: @user %>
  <% end %>
</div>

<!-- Pass mediator status clearly to JavaScript -->
<script>
  window.mediatorAssigned = <%= @mediation&.MediatorRequested && @mediation&.MediatorAssigned ? 'true' : 'false' %>;
</script>

<%= javascript_include_tag "negotiation_chat" %>
<%= javascript_include_tag "mediator_chats" %>


<script>
console.log("=== ACTIONCABLE DEBUG ===");
console.log("ActionCable available:", typeof ActionCable !== 'undefined');
console.log("App object:", typeof App !== 'undefined');

// Test direct ActionCable connection
if (typeof ActionCable !== 'undefined') {
  const cable = ActionCable.createConsumer();
  console.log("ActionCable consumer created:", cable);
  
  const messagesElement = document.getElementById('messages');
  if (messagesElement) {
    const conversationId = messagesElement.dataset.conversationId;
    console.log("Conversation ID found:", conversationId);
    
    if (conversationId) {
      const subscription = cable.subscriptions.create(
        { channel: "MessagesChannel", conversation_id: conversationId },
        {
          connected() { console.log("‚úÖ WebSocket connected!"); },
          disconnected() { console.log("‚ùå WebSocket disconnected"); },
          received(data) { 
            console.log("üì® Message received:", data);
            // Just log for now, don't try to insert
          }
        }
      );
    }
  }
} else {
  console.log("‚ùå ActionCable not available");
}
</script>